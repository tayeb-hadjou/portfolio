---
import Button from "../components/button.astro";
import Separator from "../components/home/separator.astro";
import Layout from "../layouts/main.astro";
---

<Layout title="tayeb">
  <div
    id="test"
    class=" w-full  max-w-4xl mx-auto  px-7 md:mt-20 lg:mt-6 xl:px-0"
  >
    <div class="md:h-full h-16 flex flex-col-reverse items-center  md:flex-row">
      <div class="relative w-full h-full md:w-1/2 md:h-full">
        <h1
          class=" mb-5 text-4xl font-bold leading-tight md:text-4xl dark:text-white "
        >
          <span 
          class=" typing-effect"
          id="title_typing"></span>
        </h1>
        <p 
           id="att"
            class="mb-6 text-neutral-600 typing-effect" style="display: none;"></p>

        <div id="from_bottom" style="opacity: 0;">
          <p
          class="mb-2 font-semibold text-neutral-800 dark:text-neutral-200">
            I can help you out with:
          </p>
          <ul
            class="py-2 space-y-[3px] text-sm list-disc list-inside text-neutral-500 dark:text-neutral-400"
          >
            <li>React.js, Vue.js Development</li>
            <li>Python, Java Development</li>
            <li>Website Design</li>
            <li>Explore my website to discover more...</li>
          </ul>
        </div>
        </div>
        <div id="ok" class="relative">
          <div  class="absolute p-2 w-16 h-16 z-10 w-16 h-16 text-2xl md:top-[-24px] md:left-[-24px]" 
          ><span id="shake" class=" hidden flex items-center justify-center w-full h-full bg-white border border-dashed rounded-full dark:bg-neutral-950 border-neutral-300 dark:border-neutral-700">ðŸ‘‹</span></div>
          <div id="image_container" class="relative  h-64 w-64 w-[208px] h-[208px] rounded-full mt-6 md:rounded-2xl md:w-[380px] md:h-72 md:mt-0 border border-neutral-200 border-neutral-300 border-dashed md:px-10 opacity-0 transition-opacity duration-[2000ms]">
            <img
              src="/portfolio/assets/images/photo.png"
              class="w-full h-full rounded-full md:rounded-2xl"
            />
          
        </div>
      </div>
    </div>
    </div>
    
  </div>
</Layout>

<style>
  .typing-effect::after {
    content: '_';
    color : #ffdc5d;
    animation: blink 0.5s infinite;
    margin-left: 10px;
    font-weight: 900;
  }

  @keyframes blink {
    0% { opacity: 1; }
    50% { opacity: 0; }
    100% { opacity: 1; }
  }

  .fade-in-up {
    animation: fadeInUp 1.5s forwards;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in {
    opacity: 1 !important;
  }

  @keyframes shake {
    0%, 100% { transform: rotate(0deg); }
    25% { transform: rotate(-10deg); }
    50% { transform: rotate(10deg); }
    75% { transform: rotate(-10deg); }
  }

  #shake {
    animation: shake 1s 2;
    transform-origin: 100% 100%;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const titleText = "Hello, I'm Tayeb.";
    const attText = "I'm a web development student, looking for a company offering apprenticeship opportunities.";
    const speed = 50; // typing speed in milliseconds
    const attSpeed = speed / 5; // double the speed for 'att'
    const titleTypingElement = document.getElementById('title_typing');
    const attElement = document.getElementById('att');
    const fromBottomElement = document.getElementById('from_bottom');
    const imageContainer = document.getElementById('image_container');
    const shakeElement = document.getElementById('shake');
    const fotterElement = document.getElementById('footer');
    const headerElement = document.getElementById('header');

    function typeWriter(element, text, speed, callback) {
      let index = 0;
      function type() {
        if (index < text.length) {
          element.innerHTML += text.charAt(index);
          index++;
          setTimeout(type, speed);
        } else {
          element.classList.remove('typing-effect');
          if (callback) callback();
        }
      }
      type();
    }

    function revealElements() {
      fromBottomElement.style.opacity = '1';
      fromBottomElement.classList.add('fade-in-up');
      imageContainer.classList.add('fade-in');
      shakeElement.classList.remove('hidden');
      fotterElement.classList.remove('hidden');
      fotterElement.classList.add('fade-in-up');
      headerElement.classList.remove('hidden');
      headerElement.classList.add('fade-in-up');
    }

    typeWriter(titleTypingElement, titleText, speed, () => {
      attElement.style.display = 'block';
      typeWriter(attElement, attText, attSpeed, revealElements);
    });
  });
</script>
